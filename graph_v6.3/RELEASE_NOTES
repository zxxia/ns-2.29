NS-2 RPI Graphing and Statistics Package

All software is released under the MIT licsense. (see LICENSE file)

v6.3
- rerelease of v6.2.9.beta as non-beta after testing with ns-2.31.
- development has moved to sourceforge.
    http://www.sourceforge.net/projects/ns2graph
- updated FAQ and docs accordingly.

v6.2.9.beta
- rerelease under the MIT license.

v6.2.8.beta
- Further fixes in configure.tcl
- Added reference counting to SharedFile.
- Added new graph class BufferVersusTime.
- Improved clean up of intermediate files when clean is called.
  Introduced notion of "cleanables."  Intermediate files generated by 
  plot devices that can be cleaned (i.e., removed).
- added sec2t which converts from seconds to time notation 
  (e.g., 1e-6 becomes 1us, 1e-3 becomes 1ms, 1 becomes 1 second).
  I use this in many places where time is passed. Previously I only
  allowed passing of time in units of seconds.
- added t2sec which converts from time notation to seconds.
- create-mice-over-sth: source that periodically sends a file
  with exponential interreuest times and pareto file sizes, but
  uses caller specified src and sink agent classes. (submitted by Yong Xia)

v6.2.7.beta
- Fixed some small bugs in configure.tcl.

v6.2.6.beta
- I introduced an install script that takes the user through the install
  process step-by-step.  Unfortunately it is not 100% automatic.  It still
  requires the user to set environment variables in their start 
  shell initialization script (e.g., .bashrc).  This install script
  + checks to make sure environment variables are set correctly. 
  + backs up the current NS source tree directory if user wants.
  + removes installed versions of RPI graph if user wants.
  + copies RPI graph fies 

- changed create-tmp-directory so that it warns the user when 
  there are more than 20 temporary file directories (e.g., /tmp/expXX where 
  XX is an integer that increments every time a user runs a simulation using
  the graph package).  
  The value for these warnings can be adjusted by setting the global 
  TCL variable
    warning_tmp_directory_cnt_


v6.2.4.beta
- I generalized the package to allow script programmers to plot a graph 
  multiple times whether with the same plot device or with different plot 
  devices.  In prior versions, a graph could be plotted multiple times 
  but only to different plot devices.

  I achieved this by doing two things: 
    1. deprecating the use of PlotDevice id_'s 
     and 
    2. instituting per-plot id's. In other words, the counter is
       associated with each time a graph is plotted not with a particular 
       plot device.

- In keeping with part 2 of the previous modification, I also changed
  the naming convention for command files and output files.  Now
  the command filenames and output filenames contain the suffix 
  "_plotXX" where XX is an integer counter stored in each graph object
  that is incremented each time that graph is plotted.  For example, 
  previously, a queue length graph with an id_ of 5 and a pdf plot device 
  with id_ 1 would generate the filename
    qlen_vs_time5_1.pdf

  Now the graph's output filename becomes 
    qlen_vs_time5_plot1.pdf,
  and for subsequent plots of the queue length graph using the
  pdf plot device, the output filename becomes
    qlen_vs_time5_plot2.pdf
    qlen_vs_time5_plot3.pdf
    ...
  No plot device id appears in the filenames because plot devices
  no longer have ids.
  
  A subsequent plot using the postscript plot device generates
    qlen_vs_time5_plot4.eps
  assuming this was the fourth plot of the queue length graph.

- Renamed PlotDevice instprocs that should only be called by instances
  of a plot device class or its subclasses.  Now each of these instprocs
  is prepended with "protected-". 

- I divided PlotDevice plots into two instprocs: "plot" and "protected-plot."
  The graph classes still call the plot device's "instproc plot" (i.e., not 
  instproc protected-plot).  However, plot devices call low level plotters'  
  "protected-plot."  The only difference between "plot" and "protected-plot"
  is that "plot" increments the plot count before calling "protected-plot."
  This was necessary so that a plotter would not increment a graph's
  plot_cnt more than once in the process of plotting.

- Added two examples (8 and 9) and associated sections to the user manual 
  (4.8 and 4.9) describing how to modify the default appearance of graphs,
  how to better control the layout of graphs, how to insert text in the output
  graph file, and how to use XY plots when no existing graph class is 
  suitable and the graph is not general enough to warrant extending the graph
  classes.

- To the latex plot device, I added the ability to output multiple graphs 
  per line (i.e., per tabular row) in latex files.  Just set the latex 
  plot devices n_graphs_per_row_ class member prior to instantiating the plot 
  device.  For example:
    latex set n_graphs_per_row_ 2  <--- This causes two columns of graphs to 
                                        appear on a page.  The graphs are 
                                        output left-to-right (i.e., graph 1
                                        appears to the right of graph 0).
- I changed the name of the latex plot device's "n_graphs_before_clearpage_" to
  "n_rows_before_clearpage_."  Thus a clearpage is only inserted after a 
  tabular row of graphs and their associated captions have been output.
  I also set this value to -1 so that by default inserting clearpage 
  commands in the output latex is suppressed.
- In prior versions I used "print" to print values from awk.  In this version,
  I use "printf" if one or more of the arguments are floating point values.
  This is because printf prints with greater precision.
- Moved file-min, file-max, file-var, file-stddev from graph.tcl to
  file-tools.tcl.


v6.2.3
- with the release of ns-2.28, there were significant changes in the TCP
  implementation.  These changes caused differences in the graphs
  in the graph test.  I therefore generated new graphs for ns-2.28.
  The graph package now passes all tests with ns-2.28.


v6.2.2
- added get-throughput-bps to tcp-stats.tcl.  This code was provided
  by Yong Xia.
- added to the RPIQueueMonitor class the ability to dump a queue length
  sample every interval.  A "weight" is also included with every sample.
  The weigt equals the number of packets that arrived in the 
  interval.
   LinkStats instproc trace-every-interval { t } 

- added to the RPIQueueMonitor class the ability to dump every kth queue 
  length sample trace queue.  The superclass QueueMonitor traces every
  sample when it is passed a Tcl_Channel with TCL trace command.
  You control how frequently a sample is output by calling
    LinkStats instproc trace-every-kth { { k -1 } }
  k==-1 means dump the queue length on every packet arrival and departure. 
    
- added the ability to RPIQueueMonitor to determine the pth percentile queue
  length.  This is accomplished by dumping samples to a Tcl_Channel using
  trace, trace-every-kth, or trace-every-interval as specified above.
  To specify how frequently 
    LinkStats instproc get-percentile-byte-queue-length { p } 
    LinkStats instproc get-percentile-packet-queue-length { p } 
  You must call "LinkStats instproc trace" or 
  "LinkStats instproc trace-every-kth" earlier in the simulation
  in order to compute the percentile.  The sample (i.e., trace) file
  is created in the call to trace-every-kth thus samples are not
  gathered prior to the call to trace-every-kth.

- added the ability to count the number of packets or bytes that arrive
  to a queue larger than a given threshold to RPIQueueMonitor.  This
  statistic is not dumped to a file, but can be queueried via the
  new bound variables:
    QueueMonitor/ED/RPI set babove_thresh_
    QueueMonitor/ED/RPI set pabove_thresh_
  or via calls 
    LinkStats instproc get-packets-above-thresh {}
    LinkStats instproc get-bytes-above-thresh {} 
  The LinkStats class and the associated instprocs are defined in
  $NS/tcl/rpi/link-stats.tcl

- changed relational operators of the form $x == "false" to !$x
  in $NS/tcl/rpi/graph.tcl.


v6.2.1 
- changed the plot device classes so that they do not plot
  empty data sets.  Plotting an empty data set used to cause gnuplot
  to fail with an error.  Unless the error is caught, the error causes
  the script to abort without completing postprocessing or displaying
  further plots.  The plot device object now outputs a
  warning when an empty data set is encountered.  If you want
  to suppress the warning then add the following to your script:
    PlotDevice set suppress_warnings_ true
- previously to eliminate warnings from the xdvi plot device
  you added the following to you script:
    xdvi set suppress_warnings_ true
  This still works, but you can achieve the same thing with
    PlotDevice set suppress_warnings_ true
  If "xdvi set suppress_warnings_" is defined then it takes
  precedence over "PlotDevice set suppress_warnings_."
- removed unwarranted warnings in graph.tcl claiming
  that the deprecated output_latex was being called even when
  the new output-latex was called.  These warnings did not affect
  correctness of the output.
- added TCL functions bw2bps and t2sec to tcl/rpi/script-tools.tcl.
  bw2bps converts from a bandwidth specified in bandwidth units
  to a bandwidth specified in bps but without an explicit unit.
  Ex: 1M becomes 1000000.
  t2sec converts from a time specified in time units to seconds but without
  an explicit unit.  Ex: 12s = 12 and 1m = .001
  These methods simplify performing computations in TCL for numbers specified
  with units.


v6.2
- rerelease of 6.1.5.beta as a full release.


v6.1.5.beta
- 6.1.4.beta accidentally omitted the periodic sampling functionality
  added in 6.1.3.beta and omitted the test suite.  These are now included.
- The gnuplot plot device no longer uses "sleep 10000" in order to keep
  a plot window visible.  "sleep 10000" results in gnuplot processes
  remaining alive for 10000 seconds even after any X11 window has been 
  closed.  I now execute gnuplot using "gnuplot -persist".
- The "Graph set caption_" class member was not being used to 
  initialize the Graph objects caption_ data member.
- Added test of ghostview plot device to the test suite.
- Modified ghostview plot device so that it will use gsview when 
  ghostview is not available on the machine.
- Added test of CWndVersusTime to test suite.


v6.1.4.beta
- Added overlays wherein data from 1 graph can be plotted onto another plot
  (see graph.tcl Graph's overlay instproc).
- Added a "Using overlays" section to the tutorial and an example in the
  examples directory (see examples/ex5.tcl).  Examples were renumbered such
  that the old ex5.tcl is now ex6.tcl and the old ex6.tcl is now ex7.tcl.
- Added ability to generate log plots. Note that plotting fails for some
  plot devices if the data sets contain nonpositives 
  (e.g., log(0) is undefined).


v6.1.3.beta
- Corrected error handling in problems in rpi/tcl/tests/link-stats-test.tcl
- Added periodic sampling to CWndVersusTime, RTTVersusTime, SRTTVersusTime, and
  RTTVarianceTime.


v6.1.2
- Corrected a bug in DelayMonitor that caused it not to compile correctly
  on some machines.

v6.1.1 
- Corrected three bugs in the examples scripts.
- I fixed some minor textual errata in the user manual.

v6.1
- I modified all of the Graph classes so that they no longer 
  take a plot_device as an optional argument to their constructor instprocs.
  This necessarily associated with a graph with a particular plot device,
  which was counterintuitive to some people especially when I claimed
  that the graph package abstracts data collection and device-independent
  appearance properties from the underlying plotting application. 
  Now, if the user wants to display a graph using something other than the
  default plot device, the user passes the graph directly to the plot device's
  plot instproc. Ex:
    set xgraph_plotter
    set util_graph [new Graph/UtilizationVersusTime n1 n2 0.1 $xgraph_plotter]]
    [...]
    $util_graph display

  now becomes 
    set xgraph_plotter [new xgraph]
    set util_graph [new Graph/UtilizationVersusTime n1 n2 0.1]
    $xgraph_plotter plot $util_graph

  This new method also allows the same graph object to be displayed on
  multiple plot devices.
    $xgraph_plotter plot $util_graph
    $postscript_plotter plot $util_graph
    ...
  For example this is useful if the user wants both to create a file
  and display the plot in a window.

  Note that plot devices can still be plotted using the graph's "display"
  instproc; the "display" instproc simply uses the default plot device.

v6.0.7
- Port to ns-2.26.  I ran the test suite after porting.
- This version has also been tested with ns-2.1b5 and ns-2.1b9a.
- Changed RPIQueueMonitor to QueueMonitor/ED/RPI. This allows proper
  inheritance in TCL.  All of the class variables are now properly
  initialized.
- Removed the division by zero exception in "LinkStats instproc get-power".
  Instead get-power returns NaN when queue delay is zero.
- I greatly expanded the test suites found in $NS/tcl/rpi/tests
- Graph/CWndVersusTime now does not by default plot the min of cwnd_ and
  the receiver advertised window. In prior versions of ns, I accessed
  the receiver advertised window from TCL by turning "wnd_" into
  a TracedVar.  To make "wnd_" a TracedVar requires modifying tcp.h and 
  tcp.cc in the core distribution.
  If you want to plot "wnd_" then change wnd_ then modify tcp.h as follows: 
        //double wnd_;              // commented by D. Harrison
        TracedDouble wnd_;          // Added by D. Harrison

  To avoid requiring this modification to the core distribution, I simply 
  turned off plotting "wnd_." If you want to display "wnd_" then change wnd_ 
  into a TracedDouble and then add code to print window_ to TcpAgent::traceVar
  as follows:
        // Added window_ tracing. --D. Harrison
        if (!strcmp(v->name(), "cwnd_") || !strcmp(v->name(), "window_") ||
            !strcmp(v->name(), "maxrto_"))
                sprintf(wrk,"%-8.5f %-2d %-2d %-2d %-2d %s %-6.3f", curtime, addr_/256, addr_%256, dst_/256, dst_%256, v->name(), double(*((TracedDouble*) v)));
  

v6.0.6. Several bugs were fixed:
  - The DelayMonitor now handles the case when no delay samples
    occur within a time interval by outputing an average of zero for 
    that interval. Before this caused an error condition that aborts the
    simulation.  
  - The LinkStats instance procedure by the name "get-packet-utilization"
    now properly obtains the bandwidth from the link spanning the passed
    nodes.
  - The LinkStats instance procedure by the name "get-throughput"
    throws an error when "get-throughput" is called after zero simulation
    time since the LinkStats object was instantiated or reset. Why? Because
    when no time has elapsed there is no time over which to average throughput.
  - get-power returns NaN if no packets have been recevied. Before
    it generated an error resulting from the illegal division of 
    zero throughput by NaN.
  - get-queue-delay-stddev now returns NaN if no packets have been received.
    Before it generated an error when trying to take the square root of NaN
    returned from get-queue-delay-variance.
  - LinkStats instprocs "get-min-packet-queue-length," 
    "get-max-packet-queue-length," "get-min-byte-queue-length," 
    and "get-max-byte-queue-length" return 0 rather than -1 when
    no packets have traversed the link.  This brings these 
    procs in conformance with the instprocs "get-mean-packet-queue-length"
    and "get-mean-byte-queue-length."

  I added test suites for graph.tcl and link-stats.tcl.

v6.0.5  
- Slightly better port to ns-2.1b7.
- Added ability postscript options "color," "fontname," and "fontsize" to 
  the postscript plot device.  By default "color" is true. Before
  all eps files were generated in monochrome.  If you desire monochrome
  eps files then put the following in your file before any plot devices
  are instantiated:
    postscript set color_ false

- Expanded user manual.
- Added example of outputting a graph to a file.
- Extended QLenVersusTime to by default plot the min and max of 
  each sample interval rather than the average whenever the
  sample interval is set to greater than 0. For reasonably
  short sample intervals the graph looks negligibly difference from
  instantaneous queue length with only a fraction of the overhead.
  It looks negligibly different because plotting the min and the max over
  a sample interval does not reduce variance as does averaging.    
- Extended the latex plot device to output "clearpage" after a number of 
  graphs settable via the n_graphs_before_clearpage_ class variable.
- Fixed a bug in the REDQueueVersusTime display instproc.

v6.0.5 is still not easy to install into ns. It requires modifications
to both the Makefile as well as one edit to tcp.cc.  Both are part of the
core NS distribution.  A more automated installation would be nice.

