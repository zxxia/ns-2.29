%!PS-Adobe-2.0 EPSF-2.0
%%Title: /tmp/exp13/tcp_cwnd_vs_time5_0.eps
%%Creator: gnuplot 3.7 patchlevel 2
%%CreationDate: Tue Apr 20 22:08:42 2004
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
714 420 M
6248 0 V
1.000 UL
LTb
714 420 M
63 0 V
6185 0 R
-63 0 V
630 420 M
( 0) Rshow
1.000 UL
LTa
714 1020 M
6248 0 V
1.000 UL
LTb
714 1020 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 20) Rshow
1.000 UL
LTa
714 1620 M
6248 0 V
1.000 UL
LTb
714 1620 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 40) Rshow
1.000 UL
LTa
714 2220 M
6248 0 V
1.000 UL
LTb
714 2220 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 60) Rshow
1.000 UL
LTa
714 2820 M
6248 0 V
1.000 UL
LTb
714 2820 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 80) Rshow
1.000 UL
LTa
714 3420 M
6248 0 V
1.000 UL
LTb
714 3420 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 100) Rshow
1.000 UL
LTa
714 4020 M
6248 0 V
1.000 UL
LTb
714 4020 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 120) Rshow
1.000 UL
LTa
714 4620 M
6248 0 V
1.000 UL
LTb
714 4620 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 140) Rshow
1.000 UL
LTa
714 420 M
0 4200 V
1.000 UL
LTb
714 420 M
0 63 V
0 4137 R
0 -63 V
714 280 M
( 0) Cshow
1.000 UL
LTa
1964 420 M
0 4200 V
1.000 UL
LTb
1964 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 1) Cshow
1.000 UL
LTa
3213 420 M
0 4200 V
1.000 UL
LTb
3213 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 2) Cshow
1.000 UL
LTa
4463 420 M
0 4200 V
1.000 UL
LTb
4463 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 3) Cshow
1.000 UL
LTa
5712 420 M
0 4200 V
1.000 UL
LTb
5712 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 4) Cshow
1.000 UL
LTa
6962 420 M
0 4200 V
1.000 UL
LTb
6962 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 5) Cshow
1.000 UL
LTb
714 420 M
6248 0 V
0 4200 V
-6248 0 V
714 420 L
140 2520 M
currentpoint gsave translate 90 rotate 0 0 M
(window \(in packets\)) Cshow
grestore
3838 70 M
(time \(in seconds\)) Cshow
3838 4830 M
(Congestion Window Size vs. Time) Cshow
1.000 UP
1.000 UL
LT0
714 450 Pls
1489 480 Pls
1649 510 Pls
1655 540 Pls
1808 570 Pls
1814 600 Pls
1821 630 Pls
1828 660 Pls
1967 690 Pls
1973 720 Pls
1980 750 Pls
1987 780 Pls
1994 810 Pls
2000 840 Pls
2007 870 Pls
2014 900 Pls
2126 930 Pls
2133 960 Pls
2139 990 Pls
2146 1020 Pls
2153 1050 Pls
2160 1080 Pls
2166 1110 Pls
2173 1140 Pls
2180 1170 Pls
2186 1200 Pls
2193 1230 Pls
2200 1260 Pls
2207 1290 Pls
2213 1320 Pls
2220 1350 Pls
2227 1380 Pls
2285 1410 Pls
2292 1440 Pls
2298 1470 Pls
2305 1500 Pls
2312 1530 Pls
2319 1560 Pls
2325 1590 Pls
2332 1620 Pls
2339 1650 Pls
2346 1680 Pls
2352 1710 Pls
2359 1740 Pls
2366 1770 Pls
2372 1800 Pls
2379 1830 Pls
2386 1860 Pls
2393 1890 Pls
2399 1920 Pls
2406 1950 Pls
2413 1980 Pls
2420 2010 Pls
2426 2040 Pls
2433 2070 Pls
2440 2100 Pls
2447 2130 Pls
2453 2160 Pls
2460 2190 Pls
2467 2220 Pls
2473 2250 Pls
2480 2280 Pls
2487 2310 Pls
2494 2340 Pls
2554 2370 Pls
2561 2400 Pls
2568 2430 Pls
2574 2460 Pls
2581 2490 Pls
2588 2520 Pls
2595 2550 Pls
2601 2580 Pls
2608 2610 Pls
2615 2640 Pls
2622 2670 Pls
2628 2700 Pls
2635 2730 Pls
2642 2760 Pls
2649 2790 Pls
2655 2820 Pls
2662 2850 Pls
2669 2880 Pls
2675 2910 Pls
2682 2940 Pls
2689 2970 Pls
2696 3000 Pls
2702 3030 Pls
2709 3060 Pls
2716 3090 Pls
2723 3120 Pls
2729 3150 Pls
2736 3180 Pls
2743 3210 Pls
2750 3240 Pls
2756 3270 Pls
2763 3300 Pls
2770 3330 Pls
2777 3360 Pls
2783 3390 Pls
2790 3420 Pls
2797 3450 Pls
2803 3480 Pls
2810 3510 Pls
2817 3540 Pls
2824 3570 Pls
2830 3600 Pls
2837 3630 Pls
2844 3660 Pls
2851 3690 Pls
2857 3720 Pls
2864 3750 Pls
2871 3780 Pls
2878 3810 Pls
2884 3840 Pls
2891 3870 Pls
2898 3900 Pls
2904 3930 Pls
2911 3960 Pls
2918 3990 Pls
2925 4020 Pls
2931 4050 Pls
2938 4080 Pls
2945 4110 Pls
2952 4140 Pls
2958 4170 Pls
2965 4200 Pls
2972 4230 Pls
2979 4260 Pls
3046 4290 Pls
3066 2340 Pls
3531 2340 Pls
4780 450 Pls
4939 480 Pls
5098 510 Pls
5264 540 Pls
5277 570 Pls
5429 600 Pls
5443 630 Pls
5456 660 Pls
5588 690 Pls
5602 720 Pls
5615 750 Pls
5629 780 Pls
5642 810 Pls
5754 840 Pls
5768 870 Pls
5781 900 Pls
5795 930 Pls
5808 960 Pls
5822 990 Pls
5835 1020 Pls
5920 1050 Pls
5934 1080 Pls
5947 1110 Pls
5961 1140 Pls
5974 1170 Pls
5987 1200 Pls
6001 1230 Pls
6014 1260 Pls
6028 1290 Pls
6041 1320 Pls
6115 1350 Pls
6129 1380 Pls
6142 1381 Pls
6156 1382 Pls
6169 1383 Pls
6183 1384 Pls
6196 1385 Pls
6210 1386 Pls
6223 1387 Pls
6237 1387 Pls
6250 1388 Pls
6264 1389 Pls
6277 1390 Pls
6291 1391 Pls
6304 1392 Pls
6317 1393 Pls
6398 1394 Pls
6412 1395 Pls
6425 1396 Pls
6439 1397 Pls
6452 1398 Pls
6466 1399 Pls
6479 1399 Pls
6493 1400 Pls
6506 1401 Pls
6519 1402 Pls
6533 1403 Pls
6546 1404 Pls
6560 1405 Pls
6573 1406 Pls
6587 1407 Pls
6600 1408 Pls
6688 1409 Pls
6701 1410 Pls
6728 1410 Pls
6735 1411 Pls
6742 1412 Pls
6748 1413 Pls
6755 1414 Pls
6762 1415 Pls
6769 1416 Pls
6775 1417 Pls
6782 1418 Pls
6789 1419 Pls
6796 1420 Pls
6802 1420 Pls
6809 1421 Pls
6816 1422 Pls
6822 1423 Pls
6829 1424 Pls
6836 1425 Pls
6843 1426 Pls
6849 1427 Pls
6856 1428 Pls
6876 900 Pls
6962 900 Pls
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
